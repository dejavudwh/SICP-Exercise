#lang scheme

(define (f-rec n)
    (if (< n 3)
        n
        (+ (f-rec (- n 1))
           (* 2 (f-rec (- n 2)))
           (* 3 (f-rec (- n 3))))))

(f-rec 10)

; 迭代计算过程就是那种其状态可以用固定数目的状态变量描述的计算过程
; 并且存在一套规则描述了计算过程在从这一状态到下一状态的更新方式
; 所以把递归转换成迭代的关键是找出其中递归由编译器或者解释器保存的状态
; 然后计算出来显式的保存并且找到更新方式
(define (f-iter a b c i n)
    (if (= i n)
        c
        (f-iter (+ a (* 2 b) (* 3 c))   
                a                       
                b                     
                (+ i 1)
                n)))

(f-iter 2 1 0 0 10)